/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as authSignUpImport } from './routes/(auth)/sign-up'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as auth500Import } from './routes/(auth)/500'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard/route'
import { Route as AuthenticatedDashboardIndexImport } from './routes/_authenticated/dashboard/index'
import { Route as AuthenticatedDashboardRadiographsIndexImport } from './routes/_authenticated/dashboard/radiographs/index'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const errors503LazyImport = createFileRoute('/(errors)/503')()
const errors500LazyImport = createFileRoute('/(errors)/500')()
const errors404LazyImport = createFileRoute('/(errors)/404')()
const errors403LazyImport = createFileRoute('/(errors)/403')()
const errors401LazyImport = createFileRoute('/(errors)/401')()
const authSignIn2LazyImport = createFileRoute('/(auth)/sign-in-2')()
const authForgotPasswordLazyImport = createFileRoute(
  '/(auth)/forgot-password',
)()
const AuthenticatedDashboardSettingsRouteLazyImport = createFileRoute(
  '/_authenticated/dashboard/settings',
)()
const AuthenticatedDashboardUsersIndexLazyImport = createFileRoute(
  '/_authenticated/dashboard/users/',
)()
const AuthenticatedDashboardSettingsIndexLazyImport = createFileRoute(
  '/_authenticated/dashboard/settings/',
)()
const AuthenticatedDashboardHelpCenterIndexLazyImport = createFileRoute(
  '/_authenticated/dashboard/help-center/',
)()
const AuthenticatedDashboardSettingsNotificationsLazyImport = createFileRoute(
  '/_authenticated/dashboard/settings/notifications',
)()
const AuthenticatedDashboardSettingsDisplayLazyImport = createFileRoute(
  '/_authenticated/dashboard/settings/display',
)()
const AuthenticatedDashboardSettingsAppearanceLazyImport = createFileRoute(
  '/_authenticated/dashboard/settings/appearance',
)()
const AuthenticatedDashboardSettingsAccountLazyImport = createFileRoute(
  '/_authenticated/dashboard/settings/account',
)()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const errors503LazyRoute = errors503LazyImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))

const errors500LazyRoute = errors500LazyImport
  .update({
    id: '/(errors)/500',
    path: '/500',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/500.lazy').then((d) => d.Route))

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const errors403LazyRoute = errors403LazyImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))

const errors401LazyRoute = errors401LazyImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))

const authSignIn2LazyRoute = authSignIn2LazyImport
  .update({
    id: '/(auth)/sign-in-2',
    path: '/sign-in-2',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-in-2.lazy').then((d) => d.Route))

const authForgotPasswordLazyRoute = authForgotPasswordLazyImport
  .update({
    id: '/(auth)/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/forgot-password.lazy').then((d) => d.Route),
  )

const authSignUpRoute = authSignUpImport
  .update({
    id: '/(auth)/sign-up',
    path: '/sign-up',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-up.lazy').then((d) => d.Route))

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const auth500Route = auth500Import.update({
  id: '/(auth)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedDashboardRouteRoute =
  AuthenticatedDashboardRouteImport.update({
    id: '/_authenticated/dashboard',
    path: '/dashboard',
    getParentRoute: () => rootRoute,
  } as any)

const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)

const AuthenticatedDashboardSettingsRouteLazyRoute =
  AuthenticatedDashboardSettingsRouteLazyImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/dashboard/settings/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedDashboardUsersIndexLazyRoute =
  AuthenticatedDashboardUsersIndexLazyImport.update({
    id: '/users/',
    path: '/users/',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/dashboard/users/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedDashboardSettingsIndexLazyRoute =
  AuthenticatedDashboardSettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedDashboardSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/dashboard/settings/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedDashboardHelpCenterIndexLazyRoute =
  AuthenticatedDashboardHelpCenterIndexLazyImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/dashboard/help-center/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedDashboardRadiographsIndexRoute =
  AuthenticatedDashboardRadiographsIndexImport.update({
    id: '/radiographs/',
    path: '/radiographs/',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)

const AuthenticatedDashboardSettingsNotificationsLazyRoute =
  AuthenticatedDashboardSettingsNotificationsLazyImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedDashboardSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/_authenticated/dashboard/settings/notifications.lazy'
    ).then((d) => d.Route),
  )

const AuthenticatedDashboardSettingsDisplayLazyRoute =
  AuthenticatedDashboardSettingsDisplayLazyImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedDashboardSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/dashboard/settings/display.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedDashboardSettingsAppearanceLazyRoute =
  AuthenticatedDashboardSettingsAppearanceLazyImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedDashboardSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/dashboard/settings/appearance.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedDashboardSettingsAccountLazyRoute =
  AuthenticatedDashboardSettingsAccountLazyImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedDashboardSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/dashboard/settings/account.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/500': {
      id: '/(auth)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof auth500Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/dashboard/settings': {
      id: '/_authenticated/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof AuthenticatedDashboardSettingsRouteLazyImport
      parentRoute: typeof AuthenticatedDashboardRouteImport
    }
    '/_authenticated/dashboard/': {
      id: '/_authenticated/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof AuthenticatedDashboardIndexImport
      parentRoute: typeof AuthenticatedDashboardRouteImport
    }
    '/_authenticated/dashboard/settings/account': {
      id: '/_authenticated/dashboard/settings/account'
      path: '/account'
      fullPath: '/dashboard/settings/account'
      preLoaderRoute: typeof AuthenticatedDashboardSettingsAccountLazyImport
      parentRoute: typeof AuthenticatedDashboardSettingsRouteLazyImport
    }
    '/_authenticated/dashboard/settings/appearance': {
      id: '/_authenticated/dashboard/settings/appearance'
      path: '/appearance'
      fullPath: '/dashboard/settings/appearance'
      preLoaderRoute: typeof AuthenticatedDashboardSettingsAppearanceLazyImport
      parentRoute: typeof AuthenticatedDashboardSettingsRouteLazyImport
    }
    '/_authenticated/dashboard/settings/display': {
      id: '/_authenticated/dashboard/settings/display'
      path: '/display'
      fullPath: '/dashboard/settings/display'
      preLoaderRoute: typeof AuthenticatedDashboardSettingsDisplayLazyImport
      parentRoute: typeof AuthenticatedDashboardSettingsRouteLazyImport
    }
    '/_authenticated/dashboard/settings/notifications': {
      id: '/_authenticated/dashboard/settings/notifications'
      path: '/notifications'
      fullPath: '/dashboard/settings/notifications'
      preLoaderRoute: typeof AuthenticatedDashboardSettingsNotificationsLazyImport
      parentRoute: typeof AuthenticatedDashboardSettingsRouteLazyImport
    }
    '/_authenticated/dashboard/radiographs/': {
      id: '/_authenticated/dashboard/radiographs/'
      path: '/radiographs'
      fullPath: '/dashboard/radiographs'
      preLoaderRoute: typeof AuthenticatedDashboardRadiographsIndexImport
      parentRoute: typeof AuthenticatedDashboardRouteImport
    }
    '/_authenticated/dashboard/help-center/': {
      id: '/_authenticated/dashboard/help-center/'
      path: '/help-center'
      fullPath: '/dashboard/help-center'
      preLoaderRoute: typeof AuthenticatedDashboardHelpCenterIndexLazyImport
      parentRoute: typeof AuthenticatedDashboardRouteImport
    }
    '/_authenticated/dashboard/settings/': {
      id: '/_authenticated/dashboard/settings/'
      path: '/'
      fullPath: '/dashboard/settings/'
      preLoaderRoute: typeof AuthenticatedDashboardSettingsIndexLazyImport
      parentRoute: typeof AuthenticatedDashboardSettingsRouteLazyImport
    }
    '/_authenticated/dashboard/users/': {
      id: '/_authenticated/dashboard/users/'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof AuthenticatedDashboardUsersIndexLazyImport
      parentRoute: typeof AuthenticatedDashboardRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedDashboardSettingsRouteLazyRouteChildren {
  AuthenticatedDashboardSettingsAccountLazyRoute: typeof AuthenticatedDashboardSettingsAccountLazyRoute
  AuthenticatedDashboardSettingsAppearanceLazyRoute: typeof AuthenticatedDashboardSettingsAppearanceLazyRoute
  AuthenticatedDashboardSettingsDisplayLazyRoute: typeof AuthenticatedDashboardSettingsDisplayLazyRoute
  AuthenticatedDashboardSettingsNotificationsLazyRoute: typeof AuthenticatedDashboardSettingsNotificationsLazyRoute
  AuthenticatedDashboardSettingsIndexLazyRoute: typeof AuthenticatedDashboardSettingsIndexLazyRoute
}

const AuthenticatedDashboardSettingsRouteLazyRouteChildren: AuthenticatedDashboardSettingsRouteLazyRouteChildren =
  {
    AuthenticatedDashboardSettingsAccountLazyRoute:
      AuthenticatedDashboardSettingsAccountLazyRoute,
    AuthenticatedDashboardSettingsAppearanceLazyRoute:
      AuthenticatedDashboardSettingsAppearanceLazyRoute,
    AuthenticatedDashboardSettingsDisplayLazyRoute:
      AuthenticatedDashboardSettingsDisplayLazyRoute,
    AuthenticatedDashboardSettingsNotificationsLazyRoute:
      AuthenticatedDashboardSettingsNotificationsLazyRoute,
    AuthenticatedDashboardSettingsIndexLazyRoute:
      AuthenticatedDashboardSettingsIndexLazyRoute,
  }

const AuthenticatedDashboardSettingsRouteLazyRouteWithChildren =
  AuthenticatedDashboardSettingsRouteLazyRoute._addFileChildren(
    AuthenticatedDashboardSettingsRouteLazyRouteChildren,
  )

interface AuthenticatedDashboardRouteRouteChildren {
  AuthenticatedDashboardSettingsRouteLazyRoute: typeof AuthenticatedDashboardSettingsRouteLazyRouteWithChildren
  AuthenticatedDashboardIndexRoute: typeof AuthenticatedDashboardIndexRoute
  AuthenticatedDashboardRadiographsIndexRoute: typeof AuthenticatedDashboardRadiographsIndexRoute
  AuthenticatedDashboardHelpCenterIndexLazyRoute: typeof AuthenticatedDashboardHelpCenterIndexLazyRoute
  AuthenticatedDashboardUsersIndexLazyRoute: typeof AuthenticatedDashboardUsersIndexLazyRoute
}

const AuthenticatedDashboardRouteRouteChildren: AuthenticatedDashboardRouteRouteChildren =
  {
    AuthenticatedDashboardSettingsRouteLazyRoute:
      AuthenticatedDashboardSettingsRouteLazyRouteWithChildren,
    AuthenticatedDashboardIndexRoute: AuthenticatedDashboardIndexRoute,
    AuthenticatedDashboardRadiographsIndexRoute:
      AuthenticatedDashboardRadiographsIndexRoute,
    AuthenticatedDashboardHelpCenterIndexLazyRoute:
      AuthenticatedDashboardHelpCenterIndexLazyRoute,
    AuthenticatedDashboardUsersIndexLazyRoute:
      AuthenticatedDashboardUsersIndexLazyRoute,
  }

const AuthenticatedDashboardRouteRouteWithChildren =
  AuthenticatedDashboardRouteRoute._addFileChildren(
    AuthenticatedDashboardRouteRouteChildren,
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/dashboard': typeof AuthenticatedDashboardRouteRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/dashboard/settings': typeof AuthenticatedDashboardSettingsRouteLazyRouteWithChildren
  '/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/dashboard/settings/account': typeof AuthenticatedDashboardSettingsAccountLazyRoute
  '/dashboard/settings/appearance': typeof AuthenticatedDashboardSettingsAppearanceLazyRoute
  '/dashboard/settings/display': typeof AuthenticatedDashboardSettingsDisplayLazyRoute
  '/dashboard/settings/notifications': typeof AuthenticatedDashboardSettingsNotificationsLazyRoute
  '/dashboard/radiographs': typeof AuthenticatedDashboardRadiographsIndexRoute
  '/dashboard/help-center': typeof AuthenticatedDashboardHelpCenterIndexLazyRoute
  '/dashboard/settings/': typeof AuthenticatedDashboardSettingsIndexLazyRoute
  '/dashboard/users': typeof AuthenticatedDashboardUsersIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/dashboard/settings/account': typeof AuthenticatedDashboardSettingsAccountLazyRoute
  '/dashboard/settings/appearance': typeof AuthenticatedDashboardSettingsAppearanceLazyRoute
  '/dashboard/settings/display': typeof AuthenticatedDashboardSettingsDisplayLazyRoute
  '/dashboard/settings/notifications': typeof AuthenticatedDashboardSettingsNotificationsLazyRoute
  '/dashboard/radiographs': typeof AuthenticatedDashboardRadiographsIndexRoute
  '/dashboard/help-center': typeof AuthenticatedDashboardHelpCenterIndexLazyRoute
  '/dashboard/settings': typeof AuthenticatedDashboardSettingsIndexLazyRoute
  '/dashboard/users': typeof AuthenticatedDashboardUsersIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRouteRouteWithChildren
  '/(auth)/500': typeof auth500Route
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(auth)/forgot-password': typeof authForgotPasswordLazyRoute
  '/(auth)/sign-in-2': typeof authSignIn2LazyRoute
  '/(errors)/401': typeof errors401LazyRoute
  '/(errors)/403': typeof errors403LazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500': typeof errors500LazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/_authenticated/dashboard/settings': typeof AuthenticatedDashboardSettingsRouteLazyRouteWithChildren
  '/_authenticated/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/_authenticated/dashboard/settings/account': typeof AuthenticatedDashboardSettingsAccountLazyRoute
  '/_authenticated/dashboard/settings/appearance': typeof AuthenticatedDashboardSettingsAppearanceLazyRoute
  '/_authenticated/dashboard/settings/display': typeof AuthenticatedDashboardSettingsDisplayLazyRoute
  '/_authenticated/dashboard/settings/notifications': typeof AuthenticatedDashboardSettingsNotificationsLazyRoute
  '/_authenticated/dashboard/radiographs/': typeof AuthenticatedDashboardRadiographsIndexRoute
  '/_authenticated/dashboard/help-center/': typeof AuthenticatedDashboardHelpCenterIndexLazyRoute
  '/_authenticated/dashboard/settings/': typeof AuthenticatedDashboardSettingsIndexLazyRoute
  '/_authenticated/dashboard/users/': typeof AuthenticatedDashboardUsersIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/sign-up'
    | '/forgot-password'
    | '/sign-in-2'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/dashboard/settings'
    | '/dashboard/'
    | '/dashboard/settings/account'
    | '/dashboard/settings/appearance'
    | '/dashboard/settings/display'
    | '/dashboard/settings/notifications'
    | '/dashboard/radiographs'
    | '/dashboard/help-center'
    | '/dashboard/settings/'
    | '/dashboard/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/sign-up'
    | '/forgot-password'
    | '/sign-in-2'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/dashboard'
    | '/dashboard/settings/account'
    | '/dashboard/settings/appearance'
    | '/dashboard/settings/display'
    | '/dashboard/settings/notifications'
    | '/dashboard/radiographs'
    | '/dashboard/help-center'
    | '/dashboard/settings'
    | '/dashboard/users'
  id:
    | '__root__'
    | '/'
    | '/_authenticated/dashboard'
    | '/(auth)/500'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/sign-up'
    | '/(auth)/forgot-password'
    | '/(auth)/sign-in-2'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/dashboard/settings'
    | '/_authenticated/dashboard/'
    | '/_authenticated/dashboard/settings/account'
    | '/_authenticated/dashboard/settings/appearance'
    | '/_authenticated/dashboard/settings/display'
    | '/_authenticated/dashboard/settings/notifications'
    | '/_authenticated/dashboard/radiographs/'
    | '/_authenticated/dashboard/help-center/'
    | '/_authenticated/dashboard/settings/'
    | '/_authenticated/dashboard/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthenticatedDashboardRouteRoute: typeof AuthenticatedDashboardRouteRouteWithChildren
  auth500Route: typeof auth500Route
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authSignUpRoute: typeof authSignUpRoute
  authForgotPasswordLazyRoute: typeof authForgotPasswordLazyRoute
  authSignIn2LazyRoute: typeof authSignIn2LazyRoute
  errors401LazyRoute: typeof errors401LazyRoute
  errors403LazyRoute: typeof errors403LazyRoute
  errors404LazyRoute: typeof errors404LazyRoute
  errors500LazyRoute: typeof errors500LazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthenticatedDashboardRouteRoute:
    AuthenticatedDashboardRouteRouteWithChildren,
  auth500Route: auth500Route,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authSignUpRoute: authSignUpRoute,
  authForgotPasswordLazyRoute: authForgotPasswordLazyRoute,
  authSignIn2LazyRoute: authSignIn2LazyRoute,
  errors401LazyRoute: errors401LazyRoute,
  errors403LazyRoute: errors403LazyRoute,
  errors404LazyRoute: errors404LazyRoute,
  errors500LazyRoute: errors500LazyRoute,
  errors503LazyRoute: errors503LazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated/dashboard",
        "/(auth)/500",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/(auth)/sign-up",
        "/(auth)/forgot-password",
        "/(auth)/sign-in-2",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_authenticated/dashboard": {
      "filePath": "_authenticated/dashboard/route.tsx",
      "children": [
        "/_authenticated/dashboard/settings",
        "/_authenticated/dashboard/",
        "/_authenticated/dashboard/radiographs/",
        "/_authenticated/dashboard/help-center/",
        "/_authenticated/dashboard/users/"
      ]
    },
    "/(auth)/500": {
      "filePath": "(auth)/500.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.tsx"
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.lazy.tsx"
    },
    "/(auth)/sign-in-2": {
      "filePath": "(auth)/sign-in-2.lazy.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.lazy.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.lazy.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.lazy.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.lazy.tsx"
    },
    "/_authenticated/dashboard/settings": {
      "filePath": "_authenticated/dashboard/settings/route.lazy.tsx",
      "parent": "/_authenticated/dashboard",
      "children": [
        "/_authenticated/dashboard/settings/account",
        "/_authenticated/dashboard/settings/appearance",
        "/_authenticated/dashboard/settings/display",
        "/_authenticated/dashboard/settings/notifications",
        "/_authenticated/dashboard/settings/"
      ]
    },
    "/_authenticated/dashboard/": {
      "filePath": "_authenticated/dashboard/index.tsx",
      "parent": "/_authenticated/dashboard"
    },
    "/_authenticated/dashboard/settings/account": {
      "filePath": "_authenticated/dashboard/settings/account.lazy.tsx",
      "parent": "/_authenticated/dashboard/settings"
    },
    "/_authenticated/dashboard/settings/appearance": {
      "filePath": "_authenticated/dashboard/settings/appearance.lazy.tsx",
      "parent": "/_authenticated/dashboard/settings"
    },
    "/_authenticated/dashboard/settings/display": {
      "filePath": "_authenticated/dashboard/settings/display.lazy.tsx",
      "parent": "/_authenticated/dashboard/settings"
    },
    "/_authenticated/dashboard/settings/notifications": {
      "filePath": "_authenticated/dashboard/settings/notifications.lazy.tsx",
      "parent": "/_authenticated/dashboard/settings"
    },
    "/_authenticated/dashboard/radiographs/": {
      "filePath": "_authenticated/dashboard/radiographs/index.tsx",
      "parent": "/_authenticated/dashboard"
    },
    "/_authenticated/dashboard/help-center/": {
      "filePath": "_authenticated/dashboard/help-center/index.lazy.tsx",
      "parent": "/_authenticated/dashboard"
    },
    "/_authenticated/dashboard/settings/": {
      "filePath": "_authenticated/dashboard/settings/index.lazy.tsx",
      "parent": "/_authenticated/dashboard/settings"
    },
    "/_authenticated/dashboard/users/": {
      "filePath": "_authenticated/dashboard/users/index.lazy.tsx",
      "parent": "/_authenticated/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
